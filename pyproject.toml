[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "arena"
version = "0.0.1"
description = "ARENA AI safety curriculum with MAIA"
classifiers = [
    "Private :: Do Not Upload",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License"
]
requires-python = ">=3.10,<3.13"
dependencies = [
    "loguru>=0.7.3",
    "plotly>=5.24.1",
    "pydantic>=2.10.3",
    "rich>=13.9.4",
    "numpy>=1.26.4",
    "python-dotenv>=1.0.0"
]

[[project.authors]]
name = "Gatlen Culp"

[project.license]
file = "LICENSE"

[project.readme]
file = "README.md"
content-type = "text/markdown"

[dependency-groups]
ai-apps = ["ell-ai>=0.0.15", "langchain>=0.3.12"]
ai-train = [
    "datasets>=2.17.1",
    "einops>=0.7.0",
    "jaxtyping>=0.2.36",
    "onnx>=1.17.0",
    "pytorch-lightning>=2.0.0",
    "ray[tune]>=2.40.0",
    "safetensors>=0.4.5",
    "scikit-learn>=1.6.0",
    "transformers>=4.47.0",
    "wandb>=0.19.1",
    "nnsight>=0.3.7"
]
async = ["uvloop>=0.21.0"]
cli = ["typer>=0.12.0"]
cloud = ["boto3>=1.35.81"]
config = ["cookiecutter>=2.6.0", "gin-config>=0.5.0", "jinja2>=3.1.4"]
data = [
    "dagster>=1.9.5",
    "duckdb>=1.1.3",
    "networkx>=3.4.2",
    "orjson>=3.10.12",
    "pillow>=10.4.0",
    "polars>=1.17.0",
    "sqlmodel>=0.0.22",
    "tomli>=2.0.1"
]
dev = [
    "better-exceptions>=0.3.3",
    "cruft>=2.15.0",
    "faker>=33.1.0",
    "hypothesis>=6.122.3",
    "pip>=24.3.1",
    "polyfactory>=2.18.1",
    "pyinstrument>=5.0.0",
    "pyright>=1.1.390",
    "pytest-cases>=3.8.6",
    "pytest-cov>=6.0.0",
    "pytest-icdiff>=0.9",
    "pytest-mock>=3.14.0",
    "pytest-playwright>=0.6.2",
    "pytest-profiling>=1.8.1",
    "pytest-random-order>=1.1.1",
    "pytest-shutil>=1.8.1",
    "pytest-split>=0.10.0",
    "pytest-sugar>=1.0.0",
    "pytest-timeout>=2.3.1",
    "pytest>=8.3.4",
    "ruff>=0.8.3",
    "taplo>=0.9.3",
    "tox>=4.23.2",
    "uv>=0.5.7"
]
dev-doc = [
    "mdformat>=0.7.19",
    "mkdocs-material>=9.5.48",
    "mkdocs>=1.6.1"
]
dev-nb = [
    "jupyter-book>=1.0.3",
    "nbformat>=5.10.4",
    "nbqa>=1.9.1",
    "testbook>=0.4.2"
]
gui = ["streamlit>=1.41.1"]
misc = ["boltons>=24.1.0", "cachetools>=5.5.0", "wrapt>=1.17.0"]
nb = [
    "chime>=0.7.0",
    "ipykernel>=6.29.5",
    "ipython>=7.34.0",
    "ipywidgets>=8.1.5",
    "jupyterlab>=4.3.3"
]
web = [
    "beautifulsoup4>=4.12.3",
    "fastapi>=0.115.6",
    "playwright>=1.49.1",
    "requests>=2.32.3",
    "scrapy>=2.12.0",
    "uvicorn>=0.33.0"
]
arena = [
    "accelerate>=1.2.1",
    "anthropic>=0.42.0",
    "circuitsvis",
    "diffusers>=0.32.1",
    "eindex-callum>=0.1.2",
    "einops>=0.7.0",
    "frozendict>=2.4.6",
    "ftfy>=6.3.1",
    "gdown>=5.2.0",
    "gymnasium[mujoco-py,other]>=0.29.0",
    "hdbscan>=0.8.40",
    "huggingface-hub>=0.27.1",
    "imageio-ffmpeg>=0.5.1",
    "inspect-ai>=0.3.56",
    "instructor>=1.7.2",
    "ipykernel>=6.29.5",
    "ipywidgets>=7.7.1",
    "jaxtyping>=0.2.36",
    "jupyter>=1.1.1",
    "jupyterlab-widgets>=1.1.1",
    "matplotlib>=3.10.0",
    "mediapy>=1.2.2",
    "mujoco>=3.2.6",
    "neel-plotly",
    "nnsight>=0.3.5",
    "notebook>=7.3.2",
    "numpy-stl>=3.2.0",
    "openai>=1.56.2",
    "opencv-python>=4.10.0.84",
    "pandas>=2.2.3",
    "plotly>=5.24.1",
    "portalocker>=2.0.0",
    "pre-commit>=4.0.1",
    "pygame>=2.6.1",
    "pytest>=8.3.4",
    "python-dotenv>=1.0.1",
    "requests>=2.32.3",
    "sae-lens>=4.0.0",
    "sae-vis>=0.3.1",
    "safetensors>=0.4.5",
    "scikit-learn>=1.6.0",
    "sentence-transformers>=3.3.1",
    "streamlit>=1.41.1",
    "streamlit-antd-components>=0.2.5",
    "streamlit-image-select>=0.6.0",
    "streamlit-on-hover-tabs>=1.0.1",
    "tabulate>=0.9.0",
    "tiktoken>=0.6.0",
    "torch==2.4.0",
    "torchaudio==2.4.0",
    "torchinfo>=1.8.0",
    "torchvision==0.19.0",
    "tqdm>=4.67.1",
    "transformer-lens>=2.11.0",
    "typeguard>=4.4.1",
    "umap-learn>=0.5.7",
    "wandb>=0.19.1",
    "wikipedia>=1.4.0"
]

[tool.uv]
default-groups = ["arena"]

[[tool.uv.sources.torch]]
index = "pytorch-cpu"
marker = "platform_system == 'Darwin'"

[[tool.uv.sources.torch]]
index = "pytorch-cu118"
marker = "platform_system != 'Darwin'"

[[tool.uv.sources.torchvision]]
index = "pytorch-cpu"
marker = "platform_system == 'Darwin'"

[[tool.uv.sources.torchvision]]
index = "pytorch-cu118"
marker = "platform_system != 'Darwin'"

[tool.uv.sources.circuitsvis]
git = "https://github.com/callummcdougall/CircuitsVis.git"
subdirectory = "python"

[tool.uv.sources.neel-plotly]
git = "https://github.com/neelnanda-io/neel-plotly"

[[tool.uv.index]]
name = "pytorch-cu118"
url = "https://download.pytorch.org/whl/cu118"
    explicit = true

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
    explicit = true

[tool.ruff]
target-version = "py310"
line-length = 120
indent-width = 4
extend-exclude = ["docs", "test", "tests"]

[tool.ruff.lint]
select = ["F", "E"]
extend-select = ["W", "C90", "I", "N", "B", "A", "C4", "PERF", "RUF"]
ignore = ["I001"]
fixable = ["ALL"]
unfixable = []
    preview = true
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.isort]
      force-single-line = true
      force-sort-within-sections = false
      lines-after-imports = 2
known-first-party = []
known-local-folder = []
known-third-party = []
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder"
]

[tool.ruff.lint.mccabe]
      max-complexity = 24

[tool.ruff.lint.pycodestyle]
      ignore-overlong-task-comments = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.flake8-annotations]
      allow-star-arg-any = true
      ignore-fully-untyped = true

[tool.ruff.lint.pylint]
      max-args = 5
      max-branches = 12
      max-locals = 15
      max-statements = 50

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
    skip-magic-trailing-comma = false
line-ending = "auto"
    preview = false
    docstring-code-format = true

[tool.pytest.ini_options]
addopts = """
--tb=long
--code-highlight=yes
"""
testpaths = ["tests"]
log_file = "./logs/pytest.log"

[tool.pydoclint]
style = "google"
arg-type-hints-in-docstring = false
check-return-types = true
exclude = "\\.venv"

[tool.pyright]
include = ["."]

[tool.black]
target-version = ["py310"]
line-length = 120
skip-string-normalization = true
skip-magic-trailing-comma = true
force-exclude = """
/(
    | docs
    | setup.py
)/
"""

[tool.isort]
py_version = 310
sections = [
    "FUTURE",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER"
]
default_section = "THIRDPARTY"
known_third_party = []
known_first_party = []
known_local_folder = []
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
split_on_trailing_comma = true
lines_after_imports = 2
force_single_line = true
skip_glob = ["docs/*", "setup.py"]
filter_files = true

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
follow_imports = "silent"
no_implicit_optional = false
strict_optional = false
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
warn_return_any = false
check_untyped_defs = false
disallow_untyped_calls = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_decorators = false
disallow_subclassing_any = false
disallow_any_unimported = false
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_generics = false
allow_untyped_globals = true
allow_redefinition = true
local_partial_types = false
implicit_reexport = true
strict_equality = true
show_error_context = false
show_column_numbers = false
show_error_codes = true
exclude = ["docs", "test", "tests"]
